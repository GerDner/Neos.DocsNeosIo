prototype(Neos.DocsNeosIo:Component.Notice) < prototype(Neos.Neos:ContentComponent) {
    id = false
    title = false
    content = false
    type = 'todo'

    iconClass = ${this.type}
    iconClass.@process {
        info = ${value == 'info' ? 'fas fa-info-circle' : value}
        warning = ${value == 'warning' ? 'fas fa-exclamation-circle' : value}
        danger = ${value == 'danger' ? 'fas fa-exclamation-triangle' : value}
        tip = ${value == 'tip' ? 'fas fa-lightbulb' : value}
        backend = ${value == 'backend' ? 'fas fa-edit' : value}
    }
    renderer = afx`
        <div id={props.id} class={'notice card-panel type-' + props.type} @if.isFrontendNotice={props.type != 'backend' || node.context.inBackend}>
            <h4 @if.has={props.title || node.context.inBackend} class="header">
                <Neos.DocsNeosIo:Component.Icon iconName={String.firstLetterToUpperCase(props.type)} iconClass={props.iconClass} additionalClass="left inline-icon" />
                <span @if.backend={props.type == 'backend'}>Backend only: </span>
                {props.title}
            </h4>
            <div class="styled-content">{props.content}</div>
        </div>
    `
}
